= Powerbars for TechInc =

We have multiple powerbars, controllable over serial. Each of these bars has
power sockets that can be turned on/off individually. The plan is to use these
throughout to space to be able to remotely control the lights and other
machinery.

== Design ==

Since we don't care about where the bars are and how many we have, the most
basic component we consider in a socket. A socket can be turned on or off.
A socket can be part of a group. As such, a group consists of a set of sockets.
Groups can be turned on or off as a whole. Finally, there will be prefixes,
which consist of a set of groups. A prefix can be turned on or off as a whole,
thus turning on or off and the groups in said prefix, and all the sockets in all
said groups.

== Security ==

The plan is to use serial cables to connect the bars together,
but optionally we can put a cheap device with serial in front of
every powerbar and have them communicate over HTTPS.
The inter-device communication (where required) will happen over HTTPS, using
certificates for authentication.

ACL's will be used, to "secure" certain groups if deemed necessary.

The main supported API is listed below. Some other interfaces (with possibly
access to all components) will follow.

== API ==

export MLP_HOST=10.0.20.30
export MLP_PORT=5000

for i in $(seq 0 19) ; do curl -d state=On http://$MLP_HOST:$MLP_PORT/0/$i ; done

== Examples ==

Currently supported "Groups":
- 'lights' (Table, 3D, BAR, Solder)
- 'table', '3d', 'bar', 'solder' (Individual ones)
- 'printer' (Printer)
- 'av' (AV Monitors)

Note that if multiple groups are 'On', you need to turn all of them off for the
light/bar to go off.

Current examples:

    # Off
    curl -d state=On http://$HOST:$PORT/group/lights

    # On
    curl -d state=Off http://$HOST:$PORT/group/lights

Turn all lights off:

    for i in "lights" "3d" "table" "solder" "bar"; do curl -d state=Off http://$MLP_HOST:$MLP_POST/group/$i; done;

== TODO / Braindump ==

Extra POST var, kill=graceful or force

